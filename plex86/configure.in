dnl // $Id$

dnl // Process this file with autoconf to produce a configure script.

AC_PREREQ(2.4)
AC_INIT(LICENSE)
AC_CONFIG_HEADER(include/config.h)

changequote(<<, >>)
changequote([, ])

AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_PATH_XTRA

AC_C_INLINE
AC_CHECK_SIZEOF(unsigned char, 0)
AC_CHECK_SIZEOF(unsigned short, 0)
AC_CHECK_SIZEOF(unsigned int, 0)
AC_CHECK_SIZEOF(unsigned long, 0)
AC_CHECK_SIZEOF(unsigned long long, 0)

dnl When compiling with gcc, use appropriate warning level
if test "$GCC" = "yes"; then
  CFLAGS="$CFLAGS -Wall -Wstrict-prototypes"
fi
if test "$GXX" = "yes"; then
  CXXFLAGS="$CXXFLAGS -Wall -Wstrict-prototypes"
fi


dnl ===============
dnl Host OS choices
dnl ===============

AC_ARG_WITH(host-stubs,
  [  --with-host-stubs                 No real host],
  )

AC_ARG_WITH(host-linux-source,
  [  --with-host-linux-source=dir      Linux kernel source dir],
  [ HOST_LINUX_SRC="$withval" ],
  [ HOST_LINUX_SRC="/lib/modules/`uname -r`/build" ]
  )
AC_SUBST(HOST_LINUX_SRC)

dnl AC_ARG_WITH(host-netbsd-source,
dnl   [  --with-host-netbsd-source=dir     NetBSD kernel source dir],
dnl   [ HOST_NETBSD_SRC="$withval" ],
dnl   [ HOST_NETBSD_SRC="/sys" ]
dnl   )
dnl AC_SUBST(HOST_NETBSD_SRC)

dnl AC_ARG_WITH(host-freebsd-source,
dnl   [  --with-host-freebsd-source=dir    FreeBSD kernel source dir],
dnl   [ HOST_FREEBSD_SRC="$withval" ],
dnl   [ HOST_FREEBSD_SRC="/sys" ]
dnl   )
dnl AC_SUBST(HOST_FREEBSD_SRC)


dnl ================
dnl Guest OS choices
dnl ================

AC_ARG_WITH(guest-linux-source,
  [  --with-guest-linux-source=dir     Linux kernel source dir],
  [ GUEST_LINUX_SRC="$withval" ],
  [ GUEST_LINUX_SRC="none" ]
  )
AC_SUBST(GUEST_LINUX_SRC)


if test "$with_host_linux_source" != ""; then
  HOST_OS=linux
elif test "$with_host_stubs" != ""; then
  HOST_OS=null
else
  echo " "
  echo "ERROR: You must select a host using a --with-host-* option."
  echo "ERROR: Try ./configure --help"
  exit 1
fi

if test "$with_guest_linux_source" != ""; then
  GUEST_OS=linux
else
  GUEST_OS=none
fi

LD=ld
AC_SUBST(LD)

AC_SUBST(HOST_OS)
AC_SUBST(HOST_VERSION)

AC_SUBST(GUEST_OS)
AC_SUBST(GUEST_VERSION)

AC_SUBST(HOST_KERNEL_CC)
AC_SUBST(HOST_KERNEL_CFLAGS)
AC_SUBST(HOST_KERNEL_LDFLAGS)

AC_SUBST(HOST_USER_CC)
AC_SUBST(HOST_USER_CFLAGS)
AC_SUBST(HOST_USER_LDFLAGS)

AC_SUBST(GUEST_KERNEL_CC)
AC_SUBST(GUEST_KERNEL_CFLAGS)
AC_SUBST(GUEST_KERNEL_LDFLAGS)

AC_SUBST(GUEST_USER_CC)
AC_SUBST(GUEST_USER_CFLAGS)
AC_SUBST(GUEST_USER_LDFLAGS)

AC_OUTPUT([
Rules.make
])
